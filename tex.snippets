global !p
def math():
    return int(vim.eval('vimtex#syntax#in_mathzone()')) == 1 

endglobal


snippet preamble "Basic template" b
\documentclass[a4paper,oneside,article,english]{memoir}
% husk at Ã¦ndre sprog
\input{../../en-preamble.tex}

\title{$1}
\author{$2}
\date{$3}
\begin{document}
\maketitle
\tableofcontents
$0
\end{document}
endsnippet

snippet sec "section{} and label{}" b
\section{${1:${VISUAL}}}  
\label{sec:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\l$1$2$3)/g}}}

$0

% section (end)
endsnippet

snippet ssec "subsection{} and label" b
\subsection{${1:${VISUAL}}}
\label{sub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\l$1$2$3)/g}}}

$0

% subsection (end)
endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet def "defintion" b
\\begin{definition}
	$0
\\end{definition}
endsnippet

snippet theo "theorem" b
\\begin{theorem}
	$0
\\end{theorem}
endsnippet

snippet ex "example" b
\\begin{example}
	$0
\\end{example}
endsnippet

snippet prop "proposition" b
\\begin{prop}
	$0
\\end{prop}
endsnippet

snippet proof "proof" b
\\begin{proof}
	$0
\\end{proof}
endsnippet


snippet lem  "lemma" b
\\begin{lemma}
	$0
\\end{lemma}
endsnippet


snippet note "note" b
\\begin{note}
	$0
\\end{note}
endsnippet


priority 100
context "math()"
snippet ... "ldots" iA
\ldots
endsnippet


snippet em "emphasize" i
\emph{${1:${VISUAL}}}$0
endsnippet

snippet bf "bold" i
\textbf{${1:${VISUAL}}}$0
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{tabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet it "itemrow" b
\item $0
endsnippet

snippet itd "itemrow-description" b
\item[$1] $0
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

context "math()"
snippet => "implies" Ai
\implies
endsnippet

context "math()"
snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}
.\] $0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
.\end{align*}
endsnippet


context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet


snippet sympy "sympyblock " i
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

context "math()"
snippet == "equals" iA
&= $1 \\\\
endsnippet

context "math()"
snippet != "equals" iA
\neq 
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

context "math()"
snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet lr( "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet lr| "left| right|" iA
\left| ${1:${VISUAL}} \right| $0
endsnippet

context "math()"
snippet lr{ "left\{ right\}" iA
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

context "math()"
snippet lrb "left\{ right\}" iA
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

context "math()"
snippet lr< "left< right>" iA
\langle ${1:${VISUAL}} \rangle $0
endsnippet


context "math()"
snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

context "math()"
snippet lra "leftangle rightangle" iA
\left\langle${1:${VISUAL}} \right\rangle$0
endsnippet


context "math()"
snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

context "math()"
snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

context "math()"
snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

context "math()"
snippet __ "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet ooo "\infty" iA
\infty
endsnippet

context "math()"
snippet <= "leq" iA
\le 
endsnippet

context "math()"
snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet EE "geq" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet


context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet vii  "vi" iA
v_{i}
endsnippet


context "math()"
snippet vnn "vn" iA
v_{n}
endsnippet

context "math()"
snippet sii "si" iA
s_{i}
endsnippet

context "math()"
snippet Sii "Si" iA
S_{i}
endsnippet

context "math()"
snippet snn "sn" iA
s_{n}
endsnippet

context "math()"
snippet Snn "Sn" iA
S_{n}
endsnippet

context "math()"
snippet xp1 "xn1" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "xm" iA
x_{m}
endsnippet

context "math()"
snippet R0+ "R0+" iA
\\R_0^+
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

context "math()"
snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla 
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

priority 100
context "math()"
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

context "math()"
snippet bm "bm" i
\bm{$1}$0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet


priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 100
context "math()"
snippet to "to" iA
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet

context "math()"
snippet >> ">>" iA
\gg
endsnippet

context "math()"
snippet << "<<" iA
\ll
endsnippet


context "math()"
snippet ~~ "~" iA
\sim 
endsnippet

context "math()"
snippet set "set" wA
\\{$1\\} $0
endsnippet

context "math()"
snippet || "mid" iA
 \mid 
endsnippet


context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

context "math()"
snippet notin "not in " iA
\not\in 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

context "math()"
snippet NN "n" iA
\N
endsnippet

context "math()"
snippet Nn "cap" iA
\cap 
endsnippet

context "math()"
snippet UU "cup" iA
\cup 
endsnippet

context "math()"
snippet uuu "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet nnn "bigcap" iA
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet OO "emptyset" iA
\O
endsnippet

context "math()"
snippet RR "real" iA
\R
endsnippet

context "math()"
snippet QQ "Q" iA
\Q
endsnippet

context "math()"
snippet PP "P" iA
\P
endsnippet

context "math()"
snippet ZZ "Z" iA
\Z
endsnippet

context "math()"
snippet <! "normal" iA
\triangleleft 
endsnippet

context "math()"
snippet <> "hokje" iA
\diamond 
endsnippet


context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
.\end{align*}
endsnippet

context "math()"
snippet cvec "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

# Greek letters
context "math()"   
snippet @g "gamma" iA
\gamma
endsnippet

context "math()"   
snippet @G "Gamma" iA
\Gamma
endsnippet

context "math()"
snippet @d "delta" iA
\delta
endsnippet

context "math()"   
snippet @D "Delta" iA
\Delta
endsnippet

context "math()"
snippet @l "lambda" iA
\lambda
endsnippet

context "math()"
snippet @L "Lambda" iA
\Lambda
endsnippet

context "math()"
snippet @f "phi" iA
\phi
endsnippet

context "math()"
snippet @F "phi" iA
\Phi
endsnippet

context "math()"
snippet @p "pi" iA
\pi
endsnippet

context "math()"
snippet @P "Pi" iA
\Pi
endsnippet

context "math()"
snippet @c "psi" iA
\psi
endsnippet

context "math()"
snippet @s "sigma" iA
\sigma
endsnippet

context "math()"
snippet @S "Sigma" iA
\Sigma
endsnippet

context "math()"
snippet @y "upsilon" iA
\upsilon
endsnippet

context "math()"
snippet @j "xi" iA
\xi
endsnippet

context "math()"
snippet @v "omega" iA
\omega
endsnippet

context "math()"
snippet @a "alpha" iA
\alpha
endsnippet

context "math()"
snippet @b "beta" iA
\beta
endsnippet

context "math()"
snippet @e "epsilon" iA
\epsilon
endsnippet

context "math()"
snippet @z "zeta" iA
\zeta
endsnippet

context "math()"
snippet @h "eta" iA
\eta
endsnippet

context "math()"
snippet @u "theta" iA
\theta
endsnippet

context "math()"
snippet @i "iota" iA
\iota
endsnippet

context "math()"
snippet @k "kappa" iA
\kappa
endsnippet

snippet @m "mu" iA
\mu
endsnippet

context "math()"
snippet @n "nu" iA
\nu
endsnippet

context "math()"
snippet @r "rho" iA
\rho
endsnippet

context "math()"
snippet @t "tau" iA
\tau
endsnippet


context "math()"
snippet @x "chi" iA
\chi
endsnippet

priority 10000
snippet scr "Instert latest screenshot" b
`!p
from pyterm import move_and_rename
move_and_rename(snip.v.text)
`
\begin{figure}[${2:H}]
	\centering
	\includegraphics[width=0.8\textwidth]{figures/${1:${VISUAL}}.png}
	\caption{${3}}
	\label{fig:${4}}
\end{figure}
endsnippet


priority 0
snippet maple "mapleblock" i
maple $1 maple$0
endsnippet

priority 10000
snippet 'maple(.*)maple' "maple" wr
`!p
from subprocess import check_output
command = '~/.global_py_scripts/.maple -q <<< \'latex(' + \
		match.group(1)+');\''
# Run the command
s = check_output(command, shell=True)
s= str(s.decode('utf-8')).strip()
snip.rv = s
`
endsnippet


context "math()"
snippet min "minimum" iA
\min 
endsnippet

context "math()"
snippet max "minimum" iA
\max 
endsnippet

context "math()"
snippet mtt "minimum" iA
\mathrm{${1:${VISUAL}}}${0}
endsnippet

context "math()"
snippet over "overset" iA
\overset{${1:Over}}{${2:Under}}
endsnippet

context "math()"
snippet under "underset" iA
\underset{${1:Under}}{${2:Over}}
endsnippet

context "math()"
snippet sim "similar" iA
\sim 
endsnippet



# vim:ft=snippets
